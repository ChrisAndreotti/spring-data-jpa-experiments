buildscript {
    ext {
        springBootStarterVersion = '2.1.0.RELEASE'
    }
    repositories {
        jcenter()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootStarterVersion}")
        classpath 'mysql:mysql-connector-java:8.0.14'
    }
}

plugins {
    id 'org.springframework.boot' version '2.1.7.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id "org.flywaydb.flyway" version "5.2.1"
    id 'java'
}

group = 'com.candreotti.demo'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

ext['junit-jupiter.version'] = '5.5.1'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation('mysql:mysql-connector-java:8.0.14')
    implementation('org.flywaydb:flyway-core')
    compileOnly('org.projectlombok:lombok:1.18.6')
    annotationProcessor('org.projectlombok:lombok:1.18.6')
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'junit', module: 'junit'
    }
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.4.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.4.2'
}

flyway {
    user = 'demouser'
    password = 'demopassword'
    url = 'jdbc:mysql://localhost:3306/mydb'
    locations = ["filesystem:migrations/"]
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }
}